java web services:

Conversation patterns:
1) request-response	- client sends request , server sends response
2) solicit-response	- server sends message to client, client sends message to server back
3) one way			- message from client to server without any response
4) notification		- server sends message to client

=>Service Oriented architecture :
1) every service is unassociated to every other service and are independent.
S1 not depends on S2, S1 is not required to have S2 and vice versa
loosely coupled

2) services must be stateless. output of a service method depends on only input arguments

3) Services should be treated as interfaces, which have only methods to call with some arguments.

There are some similarities bw Web services and SOA.

=>Marshalling : converting memory object to some document

SOAP : Simple Object access protocol
REST : Representational State Transfer

Soap vs Rest :
https://stackoverflow.com/questions/33088130/when-to-use-soap-and-when-to-use-rest

1) Soap is standard protocol for web services. It has standard api for sending, receiving messages with security and fault handling.
   REST is an architectural style. It does not have a standard API.
   
2) Soap is transport neutral.It supports HTTP, TCP, SMTP.
   REST is based on HTTP protocol.
   In REST based architecture everything is a resource.Resource have state.
   A resource is accessed via standard http method.
   Resources are sent in request as URI (uniform resource identifier).
   
Http protocol :

Http verbs: GET, POST, PUT, DELETE
Status code : for sending status of request in response. eg: 200(OK), 404(NOT FOUND), 403(FORBIDDEN REQUEST) 500(ERROR)
Accept header : MIME type header sent by client in request. It specifies the MIME a client can handle.
Content Type : MIME type that server sends while sending response.

POST is non-idempotent.
GET, PUT, DELETE are idempotent.

GET - read operation
PUT - update operation with specified id
DELETE - delete operation with specified id
POST - create new operation


POST call contains data inside the BODY.
GET call do not have any BODY, hence data is sent in header as query string.

(Q)how to retrieve parameters from GET request:
http://localhost:8080/test?abc=1

request.getParameter("abc");
	

http://www.javatpoint.com/jaxb-tutorial
http://www.javatpoint.com/jax-rs-tutorial
http://www.javatpoint.com/jax-ws-tutorial

-----------------------------------

JAXB :

It is used for marshalling and unmarshalling.
Marshal : converting java object to xml
Unmarshal : converting xml to java

@XmlRootElement  annotation is used for class that need to be converted to xml.

JAXBContext contextObj = JAXBContext.newInstance(Employee.class);

Marshaller marshallerObj = contextObj.createMarshaller();
Unmarshaller jaxbUnmarshaller = contextObj.createUnmarshaller();


----------------------------------
Java tools 

Schemagen : Converts java class to its xml schema

xjc : converts xml schema to its Java class

-----------------------------------

JAX-RS :

It is an RESTfull API.

Its implementations are :
1) Jersey --- reference implementation of JAX-RS
2) RESTeasy -- jboss project

Both of them have some annotations to use.

Jersey uses below annotations :
@Path
@GET
@POST
@Consumes
@Produces
@PathParam
@HeaderParam

------------------------------------------

JAX-WS :

It can be used for both SOAP and REST, but it is generally used for SOAP.
It is a Glassfish project.
->JAX-WS service can be compiled and published in JDK 1.6 or greater.


@WebService
public class HelloWorld {
	@WebMethod
	public int increment(int number) {
		return number+1;
	}
}

-> An endpoint will be required for this webservice to work.
-> Every request and response object in SOAP is a JAXB artifact.
-> Web services can be written in two ways : Code first OR Contract first.
-> url?xsd=1    is schema of wsdl
-> url?wsdl     is wsdl

-> wsimport  -- creates java files from wsdl at client side
                It helps us to create JAXB artifact from wsdl file.


For above example wsimport will create below named classes:

HelloWorldService
HelloWorld
Increment
IncrementResponse
ObjectFactory
Package-Info


(Q) what is difference bw SOAP 1.1 and SOAP 1.2 ?


-----------------------------------

wsdl information:

1) definitions  : specifies and declares any other xsd if required
2) types 		: declares or links all complex data types used in web service
3) message 		: Request and response message formats using complex data type of types section
4) portType		: it defines operations of services, i.e. methods with input request and output response
5) binding		: it defines soap architectural settings, like SOAP version or transport level protocol used.
6) service 		: it is combination of portType and binding


note : targetNamespace is used to refer any external xsd or schema in wsdl.

-----------------------------------

