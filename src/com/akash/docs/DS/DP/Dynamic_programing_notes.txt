Links :
https://ocw.mit.edu/courses/electrical-engineering-and-computer-science/6-006-introduction-to-algorithms-fall-2011/lecture-videos/
https://www.youtube.com/watch?v=OQ5jsbhAv_M&list=PLfMspJ0TLR5HRFu2kLh3U4mvStMO8QURm


Dynamic Programming :

Careful brute force = execute all scenarios carefully
Exhaustive search in a clever way
subproblems + reuse

(Q)How DP is related to divide and conquer :

Divide and Conquer algorithms partition the problem into DISJOINT subproblems.
i.e. no subproblem overlaps.

DP is applied when subproblems overlaps,
i.e. two or more subproblems share same subsubproblems.

It computes a subproblem just once and stores it in an answer table.
By this it avoids the cost recomputing the same subproblem.

properties of Dynamic programming :

=>Overlapping subproblems :
When subproblems of a problem are not disjoint
i.e. subproblem share subsubproblems
solutions to these subproblems are stored and reused further

=>Optimal Substructure : 
Optimal solutions to a problem incorporate optimal solutions to its related subproblems, which may be solved independently.

Divide and Conquer approach has optimal substructure property but
it does not have overlapping subproblems property.

=>Divide And Conquer approach examples :
1)Binary search
2)Merge sort
3)Quick sort
4)Closest pair of points

=>Dynamic Programming examples :
1)Fibonacci Nth term
2)Coin change problem
3)Rod cutting problem
4)Knapsack problem
5)Word wrap problem / Test justification problem
6)Tilling problem
7)LCS (Lowest common sequence)
8)LIS (Lowest increasing subsequence)
9)parenthesis problem
10)blackjack problem
