Links :
http://www.codecommit.com/blog/java/defining-high-mid-and-low-level-languages
https://stackoverflow.com/questions/1517582/what-is-the-difference-between-statically-typed-and-dynamically-typed-languages
http://iamcomputerexpert.blogspot.in/2008/09/difference-between-low-level-high-level.html


Machine language :
->In the form of 0 and 1
->code that computer understands directly
->platform dependent
->error prone and difficult to find bugs

Assembly language:
->human readable code
->mnemonic were used for coding operations
->assembler converts this code to machine language
->platform dependent
->less error prone and easy to find bugs as compared to machine language


Factors that decide low, mid and high level languages:
-> Interaction with processor and hardware
	direct machine code or assembler is required to convert code into machine code
	or compiler and interpreter both are required 
	(virtual environment is considered when 2 layers are present).
-> H/W level abstraction
	access of memory management, allocation and deallocation of objects (garbage collection)
	access of registers and cpu cache
	primitive variable or object oriented
-> Performance of execution as it depends upon number of layers of execution
-> Abstraction of understanding the process of execution(like how things internally works)
	As the level increases, the abstraction layer increases.
	high level languages handle all complexities of execution by its own.
-> Static typing 
	high level languages are primarily dynamic typed as they focus on high abstraction.
	Static typing : languages in which variable is known at compile time.
		->easy to find bugs, programmer requires more skills
	Dynamic typing : type of variable know at runtime
		->difficult to find bugs, less programming skills are required.
-> Type of development
	low to mid are used for system programming
	mid to high are used for application programming


=================================
Links :
https://stackoverflow.com/questions/3849634/static-allocation-in-java-heap-stack-and-permanent-generation/3849819#3849819
https://en.wikipedia.org/wiki/Java_virtual_machine
https://stackoverflow.com/questions/11547458/what-is-the-difference-between-jvm-jdk-jre-openjdk
http://www.oracle.com/technetwork/java/javase/tech/index-jsp-140763.html	


(Q) What is difference bw JDK, JRE and JVM
	https://en.wikipedia.org/wiki/Java_virtual_machine
	https://stackoverflow.com/questions/11547458/what-is-the-difference-between-jvm-jdk-jre-openjdk
	
	JRE is subset of JDK
	JRE contains utilities, classes, JVM and many other things that are required to run a java program
	JDK has all these features with some other development tools like compiler and debugger
	java converts source code to byte code.
	This byte code is converted to machine code by JVM.
	JVM also handles memory management, exception handling, type inference, handling native api calls
	
(Q) Task of JVM : 
	https://qph.ec.quoracdn.net/main-qimg-e03bb2765a9869fcd1a02cd60d31bac8.webp
	https://www.quora.com/What-is-the-role-of-JVM-in-Java
	
	-> converts byte code machine code
	-> byte code verification
	-> memory initialization of primitive variables and objects
	-> garbage collection
	-> exception handling
	-> type inference
	-> handling native api calls
	
(Q) What is the diff bw platform independent and architecture neutral ?
	https://stackoverflow.com/questions/5796288/what-is-the-difference-between-architecture-neutral-and-portable
	
	platform independent : byte code created on one platform(OS+HW), can be executed on different platform.
	architecture neutral : memory and hardware execution a java code will be same accross all architectures.
							example : In C, size of int is different on diff machines 
							whereas in java int is 32 bit everywhere.
	
(Q) What is dynamic memory allocation ?
	memory allocation of an object is done at runtime using new keyword.
	Object is stored in heap and its reference is stored in stack of a thread.
	objects deallocation is done by garbage collector.
	
(Q) How is java secure ?
	source code verification is done by compiler
	Also, runtime byte code verification is done by Class loader at verification step.
	
(Q) memory allocation in java :
	https://stackoverflow.com/questions/3849634/static-allocation-in-java-heap-stack-and-permanent-generation/3849819#3849819
	https://stackoverflow.com/questions/2129044/java-heap-terminology-young-old-and-permanent-generations/2129073#2129073
	
	-> heap (objects and arrays)
	-> method area (Code, constants, and other class data)
	-> stack (every jvm thread has its own)
	
(Q) Class Loader performs three basic activities in this strict order
	-> Loading
	-> Linking
		-> Verification
		-> Preparation
		-> Resolution
	-> Initialization
	
(Q) How is java platform independent ?
platform = OS + H/W
Java secure code and compilers are same for every platform.
Different hardware and OS combination requires different JVM implementation to generate different machine code.

java source code  | compiler |	JVM1 |	OS1	|	machine code1  | (windows)
				  |	compiler |	JVM2 |	OS2	|	machine code2  | (ubuntu)
				  |	compiler |	JVM3 |	OS3	|	machine code3  | (mac)

Java bytecode is executed by an interpreter.
For each hardware architecture, a different Java bytecode interpreter is needed.

============================
(Q) What is diff bw 
String[] arr
and
String... arr

String[] arr 	-> can be treated as array of String
				-> can be declared as normal data type.

String... arr 	-> can be treated as String and array of String
				-> can only be declared as function argument and cannot be declared as normal data type.
				
Note : Java removed the concept of pointers.They avoided the programmer to handle memory management.
		Java added abstraction by introducing Garbage collection.
		
Note : Java provides both primitive and object data types.
		Primitives takes less memory as compared to object. (int takes less size than Integer)
		primitive will always have default value but object can be null.
		
